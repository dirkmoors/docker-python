FROM python:{{ pythonversion }}-alpine3.10

ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    LC_CTYPE="en_US.UTF-8" \
    LC_ALL=en_US.UTF-8 \
    PYTHONUNBUFFERED=1

# Add repositories
RUN set -v \
    && echo "@edge https://nl.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories \
    && echo "@commuedge https://nl.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories \
    && apk -u add --no-cache apk-tools@edge

# Install ca-certificates
RUN set -ex \
    && apk add --update make ca-certificates curl linux-headers \
    && update-ca-certificates \
    && rm -rf /var/cache/apk/*

# Install common packages
RUN set -ex \
    && PKGS='bash zlib su-exec linux-headers make@edge curl@edge wget@edge tar@edge' \
    && apk add --update ${PKGS} \
    && rm -rf /var/cache/apk/*

# Install waitforit
ENV WAITFORIT_VERSION="v2.2.0"
RUN set -ex \
    && curl -o /usr/local/bin/waitforit -sSL https://github.com/maxcnunes/waitforit/releases/download/$WAITFORIT_VERSION/waitforit-linux_amd64 \
    && chmod +x /usr/local/bin/waitforit \
    && rm -rf /var/cache/apk/*

# Install wkhtmltopdf
COPY contrib/alpine/wkhtmltopdf/wkhtmltopdf /bin/wkhtmltopdf
RUN apk add --update --no-cache \
    libgcc libstdc++ libx11 glib libxrender libxext libintl \
    libcrypto1.1 libssl1.1 \
    ttf-dejavu ttf-droid ttf-freefont ttf-liberation ttf-ubuntu-font-family \
    && rm -rf /var/cache/apk/*

# Install Pillow Dependencies (currently, these are the only versions available. Keep them here for explicit version pinning.)
ENV IMAGEQUANT_VERSION=2.8.2 \
    WEBP_VERSION=0.6.0
RUN set -ex \
    && BUILD_PKGS='gcc g++' \
    && PILLOW_DEPS='zlib jpeg-dev zlib-dev tiff-dev lcms2-dev freetype-dev openjpeg-dev tcl-dev' \
    && apk add --update ${PILLOW_DEPS} ${BUILD_PKGS} \
    && wget -q https://raw.githubusercontent.com/dirkmoors/docker-alpine-recipes/master/libimagequant/install-libimagequant.sh \
    && sh install-libimagequant.sh \
    && wget -q https://raw.githubusercontent.com/dirkmoors/docker-alpine-recipes/master/libwebp/install-libwebp.sh \
    && sh install-libwebp.sh \
    && apk del --purge ${BUILD_PKGS} \
    && find / -name \*.pyc -delete \
    && rm -rf /var/cache/apk/*


COPY docker-entrypoint.sh /usr/local/bin/entrypoint.sh

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
